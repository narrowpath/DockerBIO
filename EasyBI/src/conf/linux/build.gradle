buildscript {
    repositories {
        jcenter()
    }

    dependencies {
		classpath "com.bmuschko:gradle-cargo-plugin:2.2.2"
		classpath("org.hidetake:gradle-ssh-plugin:2.9.0")
    }
}

apply plugin: "java"
apply plugin: "war"
apply plugin: "maven"
apply plugin: "com.bmuschko.cargo"
apply plugin: 'org.hidetake.ssh'
//apply plugin: "cargoRelease"

group = 'com.mygenomebox'
version = '0.0.1'

description = 'Spring4 Mybatis3 Board' 

sourceCompatibility = 1.8
targetCompatibility = 1.8
//war.baseName = 'ROOT'
war.archiveName "ROOT.war"
project.webAppDirName = 'src/main/webapp'


configurations { providedCompile }
repositories {
    mavenCentral()
}

task listJars << {
	configurations.compile.each { File file -> println file.name }
}

dependencies {
	def cargoVersion = '1.6.5'
	cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
	      "org.codehaus.cargo:cargo-ant:$cargoVersion"
	
	compile fileTree(dir: 'src/main/libs', include: ['*.jar'])
	
	//download
	compile 'org.apache.httpcomponents:httpclient:4.5.1'
	
	providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.0.1'
	providedCompile group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version:'2.3.1'
	
	compile 'org.projectlombok:lombok:1.16.18'
	compile 'org.aspectj:aspectjrt:1.8.9'
	compile 'org.aspectj:aspectjweaver:1.8.9'
	compile 'com.zaxxer:HikariCP:2.4.5'
	
	compile group: 'javax.servlet', name: 'jstl', version: '1.2'
	compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.21.0'
	compile group: 'net.sf.json-lib', name: 'json-lib', version:'2.3', classifier:'jdk15'
	compile group: 'net.sf.json-lib', name: 'json-lib-ext-spring', version:'1.0.2'
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version:'1.1'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.9.2'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.9.2'
	compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version:'1.9.13'
	compile group: 'org.codehaus.jackson', name: 'jackson-core-asl', version:'1.9.13'
	
	compile group: 'org.springframework', name: 'spring-context', version:'4.2.5.RELEASE'
	compile group: 'org.springframework', name: 'spring-webmvc', version:'4.2.5.RELEASE'
	compile group: 'org.springframework', name: 'spring-web', version:'4.2.5.RELEASE'
	compile group: 'org.springframework', name: 'spring-orm', version:'4.2.5.RELEASE'
	compile group: 'org.springframework', name: 'spring-aop', version:'4.2.5.RELEASE'
	compile group: 'org.springframework', name: 'spring-test', version:'4.2.5.RELEASE'
	compile group: 'org.springframework.security', name: 'spring-security-core', version: '4.2.3.RELEASE'
	compile group: 'org.springframework.security', name: 'spring-security-config', version: '4.2.3.RELEASE'
	compile group: 'org.springframework.security', name: 'spring-security-taglibs', version: '4.2.3.RELEASE'
	
	compile group: 'org.mybatis', name: 'mybatis', version:'3.2.3'
	compile group: 'org.mybatis', name: 'mybatis-spring', version:'1.2.1'
	compile group: 'junit', name: 'junit', version:'4.11'
	
	compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
	compile group: 'org.codehaus.janino', name: 'janino', version: '3.0.7'
	
	compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.1'
	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
	compile group: 'commons-dbcp', name: 'commons-dbcp', version:'1.4'
	compile group: 'commons-io', name: 'commons-io', version:'2.4'
	compile group: 'commons-codec', name: 'commons-codec', version:'1.8'
	compile group: 'commons-fileupload', name: 'commons-fileupload', version:'1.3'
	compile(group: 'commons-beanutils', name: 'commons-beanutils', version:'1.8.3') {
	  exclude(module: 'commons-logging')
	}
	
	//compile group: 'org.springframework', name: 'springloaded', version: '1.2.5.RELEASE'
	compile group: 'org.sitemesh', name: 'sitemesh', version: '3.0.1'
	
	compile group: 'org.jsoup', name: 'jsoup', version: '1.8.3'
	compile group: 'org.toile-libre.libe', name: 'curl', version: '0.0.13'
}

final String DEFAULT_PROFILE = 'dev'
allprojects {

	if (!project.hasProperty('profile') || !profile) {
		ext.profile = DEFAULT_PROFILE
	}
    println 'target-resources :' + ext.profile

	sourceSets {
		main {
			resources {
				srcDirs "src/main/resources-env/${profile}", "src/main/resources"
			}
		}
	}
}

task deployLocal (dependsOn: war){
    copy {
        from "build/libs"
        into "/opt/java/package"
        include "*.war"
    }
}

remotes { 
	publicServer { 
		host = "192.168.151.11"
		port = 22
		user = "jasonkim"
		password = "rladnjsgh"
		knownHosts = allowAnyHosts //알 수 없는 호스트라도 접속 가능 
	} 
} 

task scp(dependsOn : 'war') <<{ 
	ssh.run { 
		//remotes.publicServer으로 호스트 세션 시작 
		session(remotes.publicServer) { 
			// war 파일명을 로컬변수에 지정 
			final warName = "ROOT.war" 
			println "war 이름 : ${warName}" 
			println "public 서버 파일 전송 시작" 
			/* from : 현재 폴더를 기준으로 from path 지정 into : 도착서버의 디렉토리 path 지정 */ 
			put from: "$buildDir/libs/${warName}", into: "/opt/apache-tomcat-8.5.23/webapps/"
			println "public 서버 파일 전송 완료" 
			//execute 'sudo service tomcat restart'
		} 
	} 
}

cargo  {
    containerId = 'tomcat8x'
    port = 8080
    cargoRedeployRemote.dependsOn war

    deployable {
        context = '/'
    }

    remote {
        hostname = '192.168.1.197'
        username = 'tomcat'
        password = 'tomcat'
    }

    local {
        homeDir = file('/Volumes/data/workspaceJava/springBoard4/build/libs')
        outputFile = file('build/output.log')
        timeout = 60000

        containerProperties {
            //property 'cargo.tomcat.ajp.port', 8009
        }
    }
}

/*
war {
	from('src/main/resources-test') { 
        include 'log4j.properties' into('/WEB-INF/classes') 
        include 'project.properties' into('/WEB-INF/classes') 
    }

}
*/

task writeNewPom {
    doLast {
        pom {
            project {
                inceptionYear '2008'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }.writeTo("$buildDir/pom.xml")
    }
}